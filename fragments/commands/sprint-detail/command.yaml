name: "Sprint Detail"
slug: sprint-detail
version: 1.0.0
triggers:
  slash: "/sprint-detail"
  input_mode: "inline"
reserved: true

requires:
  secrets: []
  capabilities: ["model.query"]

steps:
  - id: extract-sprint-code
    type: transform
    template: "{{ ctx.body | trim }}"

  - id: validate-input
    type: condition
    condition: "{{ steps.extract-sprint-code.output != '' }}"
    then:
      - id: normalize-sprint-code
        type: transform
        template: |
          {% set code = steps.extract-sprint-code.output | trim %}
          {% if code | regex_test: '^\\d+$' %}
            SPRINT-{{ code | str_pad_left: 2, '0' }}
          {% elif code | regex_test: '^(?:sprint-)?\\d+$' %}
            {% set matches = code | regex_extract: '^(?:sprint-)?(\\d+)$' %}
            SPRINT-{{ matches.0 | str_pad_left: 2, '0' }}
          {% else %}
            {{ code | upper }}
          {% endif %}

      - id: query-sprint
        type: model.query
        with:
          model: "App\\Models\\Sprint"
          conditions:
            - field: "code"
              operator: "="
              value: "{{ steps.normalize-sprint-code.output }}"
          limit: 1

      - id: check-sprint-exists
        type: condition
        condition: "{{ steps.query-sprint.output.count > 0 }}"
        then:
          - id: query-sprint-tasks
            type: model.query
            with:
              model: "App\\Models\\WorkItem"
              conditions:
                - field: "metadata->sprint_code"
                  operator: "="
                  value: "{{ steps.normalize-sprint-code.output }}"
              order: "created_at DESC"
              limit: 50
              with_relations: ["currentAssignment.agent"]

          - id: format-sprint-detail
            type: transform
            template: |
              {% set sprint = steps.query-sprint.output.results.0 %}
              {% set tasks = steps.query-sprint-tasks.output.results %}
              {% set meta = sprint.meta | default: {} %}
              
              {# Calculate task statistics #}
              {% set total = tasks | length %}
              {% set completed = 0 %}
              {% set in_progress = 0 %}
              {% set blocked = 0 %}
              {% set unassigned = 0 %}
              
              {% for task in tasks %}
                {% if task.delegation_status == 'completed' %}
                  {% set completed = completed + 1 %}
                {% elif task.delegation_status == 'assigned' or task.delegation_status == 'in_progress' %}
                  {% set in_progress = in_progress + 1 %}
                {% elif task.delegation_status == 'blocked' %}
                  {% set blocked = blocked + 1 %}
                {% elif task.delegation_status == 'unassigned' %}
                  {% set unassigned = unassigned + 1 %}
                {% endif %}
              {% endfor %}
              
              {# Format tasks data #}
              {% set formatted_tasks = [] %}
              {% for task in tasks %}
                {% set metadata = task.metadata | default: {} %}
                {% set current_agent = null %}
                {% if task.currentAssignment and task.currentAssignment.agent %}
                  {% set current_agent = {
                    "id": task.currentAssignment.agent.id,
                    "name": task.currentAssignment.agent.name,
                    "slug": task.currentAssignment.agent.slug,
                    "status": task.currentAssignment.status
                  } %}
                {% endif %}
                
                {% set task_data = {
                  "id": task.id,
                  "task_code": metadata.task_code,
                  "task_name": metadata.task_name,
                  "status": task.status,
                  "delegation_status": task.delegation_status,
                  "agent_recommendation": metadata.agent_recommendation,
                  "current_agent": current_agent,
                  "estimate_text": metadata.estimate_text,
                  "todo_progress": metadata.todo_progress | default: [],
                  "updated_at": task.updated_at
                } %}
                {% set formatted_tasks = formatted_tasks | append: task_data %}
              {% endfor %}
              
              {# Build sprint detail response #}
              {% set sprint_detail = {
                "id": sprint.id,
                "code": sprint.code,
                "title": meta.title | default: sprint.code,
                "priority": meta.priority,
                "status": meta.status,
                "estimate": meta.estimate,
                "notes": meta.notes | default: [],
                "starts_on": sprint.starts_on,
                "ends_on": sprint.ends_on,
                "stats": {
                  "total": total,
                  "completed": completed,
                  "in_progress": in_progress,
                  "blocked": blocked,
                  "unassigned": unassigned
                },
                "tasks": formatted_tasks,
                "updated_at": sprint.updated_at
              } %}
              
              {{ sprint_detail | json_encode }}

          - id: format-success-message
            type: transform
            template: |
              {% set sprint_detail = steps.format-sprint-detail.output | from_json %}
              ğŸ“‹ Sprint: {{ sprint_detail.code }} ({{ sprint_detail.stats.total }} tasks)

          - id: show-sprint-detail
            type: response.panel
            with:
              type: "sprint"
              panel_data:
                action: "detail"
                sprint: "{{ steps.format-sprint-detail.output | from_json }}"
                tasks: "{{ (steps.format-sprint-detail.output | from_json).tasks }}"
                stats: "{{ (steps.format-sprint-detail.output | from_json).stats }}"
        else:
          - id: show-sprint-not-found
            type: response.panel
            with:
              type: "sprint"
              message: "Sprint '{{ steps.extract-sprint-code.output }}' not found. Use `/sprint-list` to see available sprints."
              should_show_error_toast: true
    else:
      - id: show-missing-input
        type: response.panel
        with:
          type: "sprint"
          message: "Please provide a sprint code. Example: `/sprint-detail sprint-1` or `/sprint-detail 1`"
          should_show_error_toast: true